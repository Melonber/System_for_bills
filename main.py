import telebot
from telebot import types
import imaplib
import email
import base64
from kekes import key_1
from kekes import users
import time
import re
import sqlite3

bot = telebot.TeleBot(key_1)
global come_amount
come_amount = 0

global mail_log
global pass_email

# ---------------------- –†–ê–ë–û–¢–ê –° –ë–î -----------------------------

def get_conn():
    return sqlite3.connect('emails.db', check_same_thread=False)

@bot.message_handler(commands=['add'])
def add_email(message):
    if message.from_user.username in users:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—á—Ç—ã –∏ –ø–∞—Ä–æ–ª—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        email = message.text.split()[1]
        password = message.text.split()[2]
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∏ –∫—É—Ä—Å–æ—Ä–∞
        conn = get_conn()
        cursor = conn.cursor()
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("INSERT INTO emails (email, password) VALUES (?, ?)", (email, password))
        conn.commit()
        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        cursor.close()
        conn.close()
        bot.send_message(message.chat.id, f"Email {email} —Å –ø–∞—Ä–æ–ª–µ–º {password} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
    else:
        bot.send_message(message.chat.id, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω ! ‚ùå')


@bot.message_handler(commands=['delete'])
def delete_email(message):
    if message.from_user.username in users:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—á—Ç—ã, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
        email = message.text.split()[1]
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∏ –∫—É—Ä—Å–æ—Ä–∞
        conn = get_conn()
        cursor = conn.cursor()
        # –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("DELETE FROM emails WHERE email=?", (email,))
        conn.commit()
        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        cursor.close()
        conn.close()
        bot.send_message(message.chat.id, f"Email {email} —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    else:
        bot.send_message(message.chat.id, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω ! ‚ùå')

@bot.message_handler(commands=['list'])
def list_emails(message):
    if message.from_user.username in users:
        try:
            # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∏ –∫—É—Ä—Å–æ—Ä–∞
            conn = get_conn()
            cursor = conn.cursor()
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ—á—Ç –∏ –ø–∞—Ä–æ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            cursor.execute("SELECT email, password FROM emails")
            rows = cursor.fetchall()
            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏
            emails_list = ''
            for row in rows:
                emails_list += f"{row[0]} - {row[1]}\n"
            # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
            cursor.close()
            conn.close()
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            bot.send_message(message.chat.id, emails_list)
        except:
            bot.send_message(message.chat.id, '–í –±–∞–∑–µ –Ω–µ—Ç –Ω–∏—á–µ–≥–æ')
    else:
        bot.send_message(message.chat.id, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω ! ‚ùå')


@bot.message_handler(commands=['use'])
def get_password(message):
    if message.from_user.username in users:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—á—Ç—ã, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–æ–ª—å
        print(message.text.split())
        email = message.text.split()[1]
        print(email)
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∏ –∫—É—Ä—Å–æ—Ä–∞
        conn = get_conn()
        cursor = conn.cursor()
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("SELECT password FROM emails WHERE email=?", (email,))
        result = cursor.fetchone()
        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        cursor.close()
        conn.close()
        if result:
            password = result[0]
            bot.send_message(message.chat.id, f"–ü–∞—Ä–æ–ª—å –¥–ª—è –ø–æ—á—Ç—ã {email}: {password}")
        else:
            bot.send_message(message.chat.id, f"–ü–æ—á—Ç–∞ {email} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    else:
        bot.send_message(message.chat.id, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω !‚ùå ')




@bot.message_handler(commands=['use'])
def get_password(message):
    if message.from_user.username in users:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—á—Ç—ã, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–æ–ª—å
        email = message.text.split()[0]
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∏ –∫—É—Ä—Å–æ—Ä–∞
        conn = get_conn()
        cursor = conn.cursor()
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("SELECT password FROM emails WHERE email=?", (email,))
        result = cursor.fetchone()
        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        cursor.close()
        conn.close()
        if result:
            password = result[0]
            bot.send_message(message.chat.id, f"–ü–æ—á—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ {email}")
            global mail_log
            mail_log = email
            global pass_email
            pass_email = password
        else:
            bot.send_message(message.chat.id, f"–ü–æ—á—Ç–∞ {email} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ú–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –µ—ë —Ç—É—Ç: @mail_base_umoney_bot")
    else:
        bot.send_message(message.chat.id, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω !‚ùå ')



# --------------------------------------------------------------------

def connect_imap():
    mail_pass = pass_email
    username = mail_log
    imap_server = "imap.mail.ru"
    imap = imaplib.IMAP4_SSL(imap_server)
    imap.login(username, mail_pass)
    imap.select('inbox')
    return imap


def get_vadim_sum(msg):
        bot.send_message(msg.chat.id, f"–°—É–º–º–∞ –∑–∞—è–≤–∫–∏:  {msg.text}")
        global vadim_sum
        vadim_sum = int(msg.text)

@bot.message_handler(commands=['start'])
def start(message):
    if message.from_user.username in users:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("üí∞")
        btn2 = types.KeyboardButton("üèÅ")
        btn3 = types.KeyboardButton("‚õî")
        btn4 = types.KeyboardButton("üìß")
        markup.add(btn1, btn2, btn3,btn4)
        if message.from_user.username in users:
            bot.send_message(message.chat.id,
                             text="–°–∞–ª–∞–º, {0.first_name}! –í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É".format(
                                 message.from_user), reply_markup=markup)
        else:
            bot.send_message(message.chat.id,'–¢–µ–±—è –Ω–µ—Ç –≤ –±–∞–∑–µ !')
    else:
        bot.send_message(message.chat.id, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω !‚ùå ')

@bot.message_handler(content_types=['text'])
def func(message):
    global flag
    flag = False
    if (message.text == "üí∞"):
        if message.from_user.username in users:
            mesg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Å—É–º–º—É –∑–∞—è–≤–∫–∏ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ —Å–∏–º–≤–æ–ª–æ–≤')
            bot.register_next_step_handler(mesg, get_vadim_sum)
        else:
            bot.send_message(message.chat.id, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω !‚ùå ')

    elif (message.text == "üèÅ"):
        if message.from_user.username in users:
            flag = True

            bot.send_message(message.chat.id, '–ó–∞–ø—É—Å–∫–∞—é —à–∞—Ä–º–∞–Ω–∫—É !')
            while flag:
                    time.sleep(1)
                    mail = connect_imap()
                    mail.select('inbox')
                    status, messages = mail.search(None, 'UNSEEN')
                    message_ids = messages[0].split()

                    body = ''

                    for id in message_ids:
                        status, msg_data = mail.fetch(id, '(RFC822)')
                        for response_part in msg_data:
                            if isinstance(response_part, tuple):
                                msg = email.message_from_bytes(response_part[1])
                                if msg.is_multipart():
                                    for payload in msg.get_payload():
                                        if payload.get_content_type() == 'text/plain':
                                            body = payload.get_payload(decode=True).decode('utf-8')
                                else:
                                    body = msg.get_payload(decode=True).decode('utf-8')

                    if '–í –∫–æ—à–µ–ª—ë–∫ –ø—Ä–∏—à–ª–∏ –¥–µ–Ω—å–≥–∏' in body:
                        start_index = body.find('–í –∫–æ—à–µ–ª—ë–∫ –ø—Ä–∏—à–ª–∏ –¥–µ–Ω—å–≥–∏')
                        end_index = body.find('–í—Å–µ –¥–µ—Ç–∞–ª–∏ ‚Äî –≤ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–±—ã—Ç–∏–π')

                        if start_index >= 0 and end_index >= 0:
                            result = body[start_index:end_index]
                            result = result.replace('–í –∫–æ—à–µ–ª—ë–∫ –ø—Ä–∏—à–ª–∏ –¥–µ–Ω—å–≥–∏','')
                            result = result.replace('–°–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –°–±–µ—Ä–±–∞–Ω–∫, –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ','')
                            bot.send_message(message.chat.id, text=result)

                            came = re.findall(r"(?<=–ü—Ä–∏—à–ª–æ\s).*(?=\s‚ÇΩ)", result)
                            came = came[0]
                            came = came.replace(' ', '')
                            global come_amount
                            come_amount += int(came)

                            bot.send_message(message.chat.id, f"–°—É–º–º–∞ –∑–∞—è–≤–∫–∏:  {come_amount}/{vadim_sum}")

                            if come_amount >= vadim_sum:
                                bot.send_message(message.chat.id, 'ü§ë –§–∏–Ω–∏—àüèÅ')
                                come_amount = 0
                                break

                    elif '–ú—ã —Ä–∞—Å—Ç–æ—Ä–≥–∞–µ–º —Å –≤–∞–º–∏ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ,' in body:
                        find_wall = body.rfind('–∫–æ—à–µ–ª—ë–∫')
                        find_work = body.rfind('—Ä–∞–±–æ—Ç–∞–µ—Ç')
                        body = body[find_wall:find_work]
                        body = body.replace('–±–æ–ª—å—à–µ –Ω–µ', '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏! –°—Ç–æ–ø!üìõ')
                        body = body.replace('–∫–æ—à–µ–ª—ë–∫', '‚ö°Ô∏è–ö–æ—à–µ–ª–µ–∫')
                        bot.send_message(message.chat.id, body)
        else:
            bot.send_message(message.chat.id, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω !‚ùå ')

    elif (message.text == "‚õî"):
        if message.from_user.username in users:
            bot.send_message(message.chat.id, text="–°—Ç–æ–ø–∞—é —à–∞—Ä–º–∞–Ω–∫—É !")
            flag = False
            return flag
        else:
            bot.send_message(message.chat.id, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω !‚ùå ')

    if (message.text == "üìß"):
        if message.from_user.username in users:

            conn = sqlite3.connect('emails.db')

            # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
            cursor = conn.cursor()

            # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
            cursor.execute("SELECT * FROM emails")

            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞–ø—Ä–æ—Å–∞
            rows = cursor.fetchall()

            # –ó–∞–∫—Ä—ã—Ç–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
            cursor.close()
            conn.close()

            output = ''

            for i in range(len(rows)):
                output += rows[i][1]
            output = output.replace(".ru", ".ru ")
            output = output.replace(" ","\n")
            mesg = bot.send_message(message.chat.id, output)
            bot.register_next_step_handler(mesg, get_password)
        else:
            bot.send_message(message.chat.id, '‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω !‚ùå ')


bot.polling(none_stop=True)
